using static SFML.Window.Keyboard;

namespace Royale2D
{
    public static class KeyMaps
    {
        public const char BackspaceChar = '~';

        public static readonly List<Key> Keys = new List<Key>
        {
            Key.A,
            Key.B,
            Key.C,
            Key.D,
            Key.E,
            Key.F,
            Key.G,
            Key.H,
            Key.I,
            Key.J,
            Key.K,
            Key.L,
            Key.M,
            Key.N,
            Key.O,
            Key.P,
            Key.Q,
            Key.R,
            Key.S,
            Key.T,
            Key.U,
            Key.V,
            Key.W,
            Key.X,
            Key.Y,
            Key.Z,
            Key.Num0,
            Key.Num1,
            Key.Num2,
            Key.Num3,
            Key.Num4,
            Key.Num5,
            Key.Num6,
            Key.Num7,
            Key.Num8,
            Key.Num9,
            Key.Escape,
            Key.LControl,
            Key.LShift,
            Key.LAlt,
            Key.LSystem,
            Key.RControl,
            Key.RShift,
            Key.RAlt,
            Key.RSystem,
            Key.Menu,
            Key.LBracket,
            Key.RBracket,
            Key.Semicolon,
            Key.Comma,
            Key.Period,
            Key.Quote,
            Key.Slash,
            Key.Backslash,
            Key.Tilde,
            Key.Equal,
            Key.Hyphen,
            Key.Space,
            Key.Enter,
            Key.Backspace,
            Key.Tab,
            Key.PageUp,
            Key.PageDown,
            Key.End,
            Key.Home,
            Key.Insert,
            Key.Delete,
            Key.Add,
            Key.Subtract,
            Key.Multiply,
            Key.Divide,
            Key.Left,
            Key.Right,
            Key.Up,
            Key.Down,
            Key.Numpad0,
            Key.Numpad1,
            Key.Numpad2,
            Key.Numpad3,
            Key.Numpad4,
            Key.Numpad5,
            Key.Numpad6,
            Key.Numpad7,
            Key.Numpad8,
            Key.Numpad9,
            Key.F1,
            Key.F2,
            Key.F3,
            Key.F4,
            Key.F5,
            Key.F6,
            Key.F7,
            Key.F8,
            Key.F9,
            Key.F10,
            Key.F11,
            Key.F12,
            Key.F13,
            Key.F14,
            Key.F15,
            Key.Pause,
        };

        public static readonly Dictionary<Key, char> KeyToChar = new Dictionary<Key, char>()
        {
            { Key.A, 'a' },
            { Key.B, 'b' },
            { Key.C, 'c' },
            { Key.D, 'd' },
            { Key.E, 'e' },
            { Key.F, 'f' },
            { Key.G, 'g' },
            { Key.H, 'h' },
            { Key.I, 'i' },
            { Key.J, 'j' },
            { Key.K, 'k' },
            { Key.L, 'l' },
            { Key.M, 'm' },
            { Key.N, 'n' },
            { Key.O, 'o' },
            { Key.P, 'p' },
            { Key.Q, 'q' },
            { Key.R, 'r' },
            { Key.S, 's' },
            { Key.T, 't' },
            { Key.U, 'u' },
            { Key.V, 'v' },
            { Key.W, 'w' },
            { Key.X, 'x' },
            { Key.Y, 'y' },
            { Key.Z, 'z' },
            { Key.Num0, '0' },
            { Key.Num1, '1' },
            { Key.Num2, '2' },
            { Key.Num3, '3' },
            { Key.Num4, '4' },
            { Key.Num5, '5' },
            { Key.Num6, '6' },
            { Key.Num7, '7' },
            { Key.Num8, '8' },
            { Key.Num9, '9' },
            { Key.Space, ' ' },
            { Key.Hyphen, '-' },
            { Key.Equal, '=' },
            { Key.LBracket, '[' },
            { Key.RBracket, ']' },
            { Key.Semicolon, ';' },
            { Key.Quote, '\'' },
            { Key.Comma, ',' },
            { Key.Period, '.' },
            { Key.Slash, '/' },
            { Key.Backspace, BackspaceChar },
        };

        public static readonly Dictionary<Key, char> CapsLockMap = new Dictionary<Key, char>()
        {
            { Key.A, 'A' },
            { Key.B, 'B' },
            { Key.C, 'C' },
            { Key.D, 'D' },
            { Key.E, 'E' },
            { Key.F, 'F' },
            { Key.G, 'G' },
            { Key.H, 'H' },
            { Key.I, 'I' },
            { Key.J, 'J' },
            { Key.K, 'K' },
            { Key.L, 'L' },
            { Key.M, 'M' },
            { Key.N, 'N' },
            { Key.O, 'O' },
            { Key.P, 'P' },
            { Key.Q, 'Q' },
            { Key.R, 'R' },
            { Key.S, 'S' },
            { Key.T, 'T' },
            { Key.U, 'U' },
            { Key.V, 'V' },
            { Key.W, 'W' },
            { Key.X, 'X' },
            { Key.Y, 'Y' },
            { Key.Z, 'Z' },
        };

        public static readonly Dictionary<Key, char> KeyToCharShift = new Dictionary<Key, char>()
        {
            { Key.A, 'A' },
            { Key.B, 'B' },
            { Key.C, 'C' },
            { Key.D, 'D' },
            { Key.E, 'E' },
            { Key.F, 'F' },
            { Key.G, 'G' },
            { Key.H, 'H' },
            { Key.I, 'I' },
            { Key.J, 'J' },
            { Key.K, 'K' },
            { Key.L, 'L' },
            { Key.M, 'M' },
            { Key.N, 'N' },
            { Key.O, 'O' },
            { Key.P, 'P' },
            { Key.Q, 'Q' },
            { Key.R, 'R' },
            { Key.S, 'S' },
            { Key.T, 'T' },
            { Key.U, 'U' },
            { Key.V, 'V' },
            { Key.W, 'W' },
            { Key.X, 'X' },
            { Key.Y, 'Y' },
            { Key.Z, 'Z' },
            { Key.Num1, '!' },
            { Key.Num2, '@' },
            { Key.Num3, '#' },
            { Key.Num4, '$' },
            { Key.Num5, '%' },
            { Key.Num6, '^' },
            { Key.Num7, '&' },
            { Key.Num8, '*' },
            { Key.Num9, '(' },
            { Key.Num0, ')' },
            { Key.Hyphen, '_' },
            { Key.Equal, '+' },
            { Key.LBracket, '[' },
            { Key.RBracket, ']' },
            { Key.Semicolon, ':' },
            { Key.Quote, '"' },
            { Key.Comma, '<' },
            { Key.Period, '>' },
            { Key.Slash, '?' },
            { Key.Backspace, BackspaceChar },
        };
    }
}
